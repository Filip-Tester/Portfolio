# Plan Testów

---

## 1. Wstęp

Głównym celem działań testowych jest dostarczenie interesariuszom informacji o jakości testowanego produktu.

W niniejszym dokumencie zawarte są kluczowe informacje dotyczące procesu testowania.  
Zostały wyszczególnione wszystkie komponenty oprogramowania, które zostaną poddane weryfikacji oraz typy testów, które zostaną przeprowadzone.

---

## 2. Zakres testów

Realizowane typy testów:  
- Testy jednostkowe  
- Testy funkcjonalne  
- Testy wydajnościowe  

---

## 3. Przedmiot testów

Komponentem poddawanym testom jest **wyszukiwarka** dostępna na stronie [znanylekarz.pl](https://www.znanylekarz.pl).

---

## 4. Kryteria zaliczenia / niezaliczenia testów

- Wykonanie i zaprojektowanie wszystkich przypadków testowych  
- Czas odpowiedzi serwera nie przekracza **600 ms**  

---

## 5. Kryteria wejścia / wyjścia

### Kryteria wejścia:

- Zakończona faza implementacji wyszukiwarki  
- Działające i skonfigurowane środowisko testowe  
- Dostęp do działającej i skonfigurowanej maszyny wirtualnej  

### Kryteria wyjścia:

- Wszystkie przypadki testowe zostały wykonane pomyślnie  
- Komponent spełnia wszystkie ustalone wymagania i założenia z dokumentacji  

---

## 6. Lista wymagań / funkcjonalności do przetestowania

- Wszystkie dostępne dokumentacje  
- User story  
- Scenariusze testowe  

---

## 7. Środowisko testowe

- Testowy serwer  
- System operacyjny: Windows 11 Pro  
- Przeglądarki biorące udział w testach:  
  - Microsoft Edge  
  - Google Chrome  
  - Safari  

---

## 8. Harmonogram testów

### 8.1 Testy funkcjonalne:

- Weryfikacja funkcjonalności na podstawie user story — **3 godziny**  
- Wykonanie wcześniej zaprojektowanych przypadków testowych — **1 godzina**  
- Weryfikacja warstwy backendowej  

### 8.2 Testy wydajnościowe:

- Pomiar średniego czasu odpowiedzi serwera  
- Weryfikacja maksymalnej liczby obsługiwanych zapytań (requests)  
- Test stabilności działania wyszukiwarki przy różnych obciążeniach  

---

## 9. Raport z testów

- Lista zrealizowanych przypadków testowych wraz ze statusami  
- Wyniki i pomiary z testów wydajnościowych  

---

## 10. Lista narzędzi

- Jira  
- JMeter  
- Xray  
- BrowserStack  

---

## 11. Zarządzanie incydentami i błędami

W trakcie testów każdy wykryty błąd powinien zostać odpowiednio zgłoszony w systemie **Jira** z uwzględnieniem:  
- Priorytetu błędu  
- Osoby odpowiedzialnej za naprawę  
- Komponentu, którego dotyczy problem  

Zgodnie z ustalonym procesem, zgłoszone błędy są naprawiane przez developerów i kierowane do ponownych testów (retestów).

---

## 12. Role i odpowiedzialności

**Filip Jastrzębski** – wykonanie oraz projektowanie przypadków testowych.

---

